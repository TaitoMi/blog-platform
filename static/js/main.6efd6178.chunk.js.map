{"version":3,"sources":["images/realworld.png","components/Field.jsx","actions/registration.js","actions/login.js","actions/createArticle.js","actions/getArticles.js","actions/like.js","actions/updateArticle.js","actions/actions.js","components/Login.jsx","components/SignUp.jsx","components/Header.jsx","components/Article.jsx","components/Articles.jsx","components/MainPage.jsx","components/ArticleCreate.jsx","components/SingleArticle.jsx","components/ArticleEdit.jsx","App.jsx","serviceWorker.js","reducers/userForm.js","reducers/articles.js","reducers/reducers.js","index.jsx"],"names":["module","exports","Field","label","changer","blur","idName","value","touched","error","apiError","className","toUpperCase","slice","placeholder","onChange","onBlur","id","name","defaultProps","registration","email","username","password","dispatch","a","async","fetch","method","headers","body","JSON","stringify","user","response","ok","type","payload","reg","json","then","err","errors","action","login","localStorage","setItem","createArticle","values","token","Authorization","article","el","getArticles","off","header","offset","articles","likeOrDislike","isFavorited","slug","updateArticle","console","log","clear","exit","validationSchema","Yup","shape","min","max","required","Login","isAuthorized","exact","path","render","to","initialValues","onSubmit","handleChange","handleBlur","Password","htmlType","onClick","connect","state","bindActionCreators","actions","SignUp","isSuccessful","history","useHistory","push","setSubmitting","Header","NavBar","src","Logo","alt","Article","title","favoritesCount","author","createdAt","favorited","tagList","isLike","length","map","tag","i","newIndex","key","event","stopPropagation","icon","formatDistance","Date","locale","ru","Articles","tip","MainPage","props","asyncDidMount","currentPage","checkStorage","getItem","parse","pageHandler","page","setState","this","articlesCount","defaultCurrent","current","pageSize","total","React","Component","ArticleCreate","description","newValues","filter","alert","arrayHelpers","index","SingleArticle","currUser","ArticleEdit","App","component","CreateArticle","propses","match","params","Boolean","window","location","hostname","initialState","userForm","combineReducers","store","createStore","allReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.6efd6178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/realworld.ea1785a0.png\";","import React from 'react';\nimport { Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Field = ({ label, changer, blur, idName, value, touched, error, apiError }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <span className=\"form__label\">{label[0].toUpperCase() + label.slice(1)}</span>\n        <Input\n          placeholder={`Введите ${label}`}\n          onChange={changer}\n          onBlur={blur}\n          id={idName}\n          name={idName}\n          value={value}\n          className={`form__input ${touched && error ? 'has-error' : ''}`}\n        />\n      </div>\n      {touched && error ? <div className=\"input__error\">{error}</div> : null}\n      {apiError ? <div className=\"input__error\">{apiError}</div> : null}\n    </>\n  );\n};\n\nField.defaultProps = {\n  label: '',\n  idName: '',\n  value: '',\n  error: null,\n  apiError: null,\n  changer: null,\n  blur: null,\n  touched: null,\n};\n\nField.propTypes = {\n  label: PropTypes.string,\n  idName: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  apiError: PropTypes.arrayOf(PropTypes.string),\n  changer: PropTypes.func,\n  blur: PropTypes.func,\n  touched: PropTypes.bool,\n};\n\nexport default Field;\n","const registration = ({ email, username, password }) => {\n  return async dispatch => {\n    const response = await fetch('https://conduit.productionready.io/api/users/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          username,\n          password,\n        },\n      }),\n    });\n    if (response.ok) {\n      return dispatch({\n        type: 'USER_REGISTERED',\n        payload: {\n          reg: true,\n        },\n      });\n    }\n    const action = await response.json().then(err => {\n      return {\n        type: 'REG_ERROR',\n        payload: {\n          error: err.errors,\n        },\n      };\n    });\n    return dispatch(action);\n  };\n};\n\nexport default registration;\n","const login = ({ email, password }) => async dispatch => {\n  const response = await fetch('https://conduit.productionready.io/api/users/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      user: {\n        email,\n        password,\n      },\n    }),\n  });\n  if (response.ok) {\n    const action = await response.json().then(user => {\n      return {\n        type: 'USER_LOGIN',\n        payload: {\n          ...user,\n        },\n      };\n    });\n    localStorage.setItem('user', JSON.stringify({ email, password }));\n    return dispatch(action);\n  }\n  const action = await response.json().then(() => {\n    return {\n      type: 'LOGIN_ERROR',\n    };\n  });\n  return dispatch(action);\n};\n\nexport default login;\n","const createArticle = (values, token) => async dispatch => {\n  const response = await fetch('https://conduit.productionready.io/api/articles', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n    body: JSON.stringify({\n      article: { ...values },\n    }),\n  });\n  const action = await response.json().then(el => {\n    return {\n      type: 'CREATE_ARTICLE',\n      payload: { ...el },\n    };\n  });\n  return dispatch(action);\n};\n\nexport default createArticle;\n","const getArticles = (token, off) => async dispatch => {\n  const header = token ? { Authorization: `Token ${token}` } : null;\n  const offset = off * 10 - 10;\n  const response = await fetch(\n    `https://conduit.productionready.io/api/articles?offset=${offset}&limit=20`,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        header,\n      },\n    }\n  );\n  const action = await response.json().then(articles => {\n    return {\n      type: 'GET_ARTICLES',\n      payload: {\n        articles,\n      },\n    };\n  });\n  return dispatch(action);\n};\n\nexport default getArticles;\n","const likeOrDislike = (isFavorited, slug, token) => async dispatch => {\n  const method = isFavorited ? 'DELETE' : 'POST';\n  const response = await fetch(`https://conduit.productionready.io/api/articles/${slug}/favorite`, {\n    method,\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n  });\n  const action = await response.json().then(el => {\n    return {\n      type: 'LIKE',\n      payload: el,\n    };\n  });\n  return dispatch(action);\n};\n\nexport default likeOrDislike;\n","/* eslint-disable */\r\nconst updateArticle = (values, slug, token) => async dispatch => {\r\n  console.log(values);\r\n  const response = await fetch(`https://conduit.productionready.io/api/articles/${slug}/`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Token ${token}`,\r\n    },\r\n    body: JSON.stringify({\r\n      article: { ...values },\r\n    }),\r\n  });\r\n  await response.json().then(el => console.log(el));\r\n};\r\n\r\nexport default updateArticle;\r\n","import registration from './registration';\nimport login from './login';\nimport createArticle from './createArticle';\nimport getArticles from './getArticles';\nimport likeOrDislike from './like';\nimport updateArticle from './updateArticle';\n\nexport { registration, login, createArticle, getArticles, likeOrDislike, updateArticle };\n\nexport const clear = () => ({ type: 'ERROR_CLEAR' });\n\nexport const exit = () => {\n  localStorage.clear();\n  return { type: 'LOGIN_EXIT' };\n};\n","import React from 'react';\nimport { Button, Input } from 'antd';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Field from './Field';\nimport * as actions from '../actions/actions';\n\nconst isRequired = 'Обязательное поле';\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, 'Не меньше 8')\n    .max(40, 'Не больше 40'),\n  email: Yup.string()\n    .required(isRequired)\n    .email('Неправильный email адрес'),\n});\n\nconst Login = ({ error, isAuthorized, login, clear }) => {\n  const loginHandler = user => {\n    login(user);\n  };\n  const render = () => (isAuthorized ? <Redirect to=\"/\" /> : null);\n  return (\n    <>\n      <Route exact path=\"/login\" render={render} />\n      <Formik\n        initialValues={{\n          password: '',\n          email: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          loginHandler(values);\n        }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur }) => (\n          <Form className=\"form\">\n            {error ? <div>Неправильный email или пароль</div> : null}\n            <Field\n              label=\"email\"\n              changer={handleChange}\n              blur={handleBlur}\n              idName=\"email\"\n              value={values.email}\n              touched={touched.email}\n              error={errors.email}\n              apiError={error ? error.email : null}\n            />\n            <div className=\"form__row\">\n              <span className=\"form__label\">Введите пароль</span>\n              <Input.Password\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                id=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <div className=\"form__row\">\n              <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n                Войти\n              </Button>\n              <Button\n                htmlType=\"button\"\n                onClick={() => login({ email: 'gfdaker96@gmail.com', password: '321zxc321' })}\n                className=\"form__submit-btn\"\n                type=\"primary\"\n              >\n                loginForTest\n              </Button>\n              <NavLink to=\"/signup\" onClick={clear}>\n                <Button type=\"danger\">Зарегистрироваться</Button>\n              </NavLink>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nLogin.defaultProps = {\n  login: null,\n  error: null,\n  isAuthorized: null,\n  clear: null,\n};\n\nLogin.propTypes = {\n  login: PropTypes.func,\n  error: PropTypes.bool,\n  isAuthorized: PropTypes.bool,\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.user.error,\n    isAuthorized: state.user.isAuthorized,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { login, clear } = bindActionCreators(actions, dispatch);\n  return {\n    login,\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { Button, Input } from 'antd';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst isRequired = 'Обязательное поле';\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .required(isRequired)\n    .min(4, 'Не меньше 4 символов')\n    .max(50, 'Не более 50 символов'),\n  password: Yup.string()\n    .min(8, 'Не меньше 8')\n    .max(40, 'Не больше 40'),\n  email: Yup.string()\n    .required(isRequired)\n    .email('Неправильный email адрес'),\n});\n\nconst SignUp = ({ isSuccessful, error, clear, registration }) => {\n  const registrationHandler = userData => {\n    registration(userData);\n  };\n\n  const history = useHistory();\n  if (isSuccessful) {\n    history.push('/login');\n  }\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        email: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={async (values, { setSubmitting }) => {\n        setSubmitting(isSuccessful);\n        registrationHandler(values);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form className=\"form\">\n          <Field\n            label=\"имя\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"username\"\n            value={values.username}\n            touched={touched.username}\n            error={errors.username}\n            apiError={error ? error.username : null}\n          />\n          <Field\n            label=\"email\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"email\"\n            value={values.email}\n            touched={touched.email}\n            error={errors.email}\n            apiError={error ? error.email : null}\n          />\n          <div className=\"form__row\">\n            <span className=\"form__label\">Введите пароль</span>\n            <Input.Password\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              id=\"password\"\n              name=\"password\"\n            />\n          </div>\n          <div className=\"form__row\">\n            <Button className=\"form__submit-btn\" htmlType=\"submit\" type=\"primary\">\n              Зарегистрироваться\n            </Button>\n            <NavLink to=\"/login\" onClick={clear}>\n              <Button type=\"danger\">Уже есть аккаунт?</Button>\n            </NavLink>\n          </div>\n          {isSuccessful ? <div>Вы успешно зарегистрировались</div> : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nSignUp.defaultProps = {\n  registration: null,\n  isSuccessful: null,\n  error: null,\n  clear: null,\n};\n\nSignUp.propTypes = {\n  registration: PropTypes.func,\n  isSuccessful: PropTypes.bool,\n  error: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isSuccessful: state.user.isSuccessful,\n    error: state.user.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { registration, clear } = bindActionCreators(actions, dispatch);\n  return {\n    registration,\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport Logo from '../images/realworld.png';\nimport * as actions from '../actions/actions';\n\nconst Header = ({ isAuthorized, clear }) => {\n  const NavBar = isAuthorized ? (\n    <div className=\"header__right\">\n      <NavLink to=\"/\">\n        <Button type=\"primary\">Главная</Button>\n      </NavLink>\n    </div>\n  ) : (\n    <div className=\"header__right\">\n      <NavLink to=\"/login\" onClick={clear}>\n        <Button type=\"primary\">Войти</Button>\n      </NavLink>\n      <NavLink to=\"/signup\" onClick={clear}>\n        <Button type=\"danger\">Зарегистрироваться</Button>\n      </NavLink>\n    </div>\n  );\n  return (\n    <header className=\"header\">\n      <div className=\"header__left\">\n        <NavLink to=\"/\">\n          <img className=\"header__logo\" src={Logo} alt=\"Логотип RealWorld\" />\n        </NavLink>\n      </div>\n      {NavBar}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  isAuthorized: null,\n  clear: null,\n};\n\nHeader.propTypes = {\n  isAuthorized: PropTypes.bool,\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { clear } = bindActionCreators(actions, dispatch);\n  return {\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { formatDistance } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../actions/actions';\n\nconst Article = ({\n  title,\n  body,\n  favoritesCount,\n  author,\n  createdAt,\n  favorited,\n  tagList,\n  isAuthorized,\n  likeOrDislike,\n  slug,\n  token,\n}) => {\n  const isLike = favorited ? 'dislike' : 'like';\n  const likeHandler = event => {\n    event.stopPropagation();\n    likeOrDislike(favorited, slug, token);\n  };\n\n  return (\n    <div className=\"articles__item article\">\n      <h1 className=\"article__title\">{title}</h1>\n      <div className=\"article__body\">{body}</div>\n      {tagList.length > 0 ? (\n        <div className=\"article__tags\">\n          {tagList.map((tag, i) => {\n            const newIndex = `tag-${i}`;\n            return (\n              <span key={newIndex} className=\"article__tag\">\n                {tag}\n              </span>\n            );\n          })}\n        </div>\n      ) : null}\n      <div className=\"article__meta\">\n        <div className=\"article__likes\">\n          {isAuthorized ? (\n            <Button className=\"article__like-btn\" onClick={likeHandler} icon={isLike}>\n              {isLike}\n            </Button>\n          ) : (\n            'Likes '\n          )}\n          {favoritesCount}\n        </div>\n        <NavLink to={`/articles/${slug}`}>\n          <Button type=\"normal\">Подробнее</Button>\n        </NavLink>\n        <div className=\"article__created\">\n          <span className=\"article__author\">Автор: {author.username}</span>\n          <span className=\"article__date\">\n            {'Создано:  '}\n            {formatDistance(new Date(createdAt), new Date(), {\n              locale: ru,\n            })}{' '}\n            назад\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nArticle.defaultProps = {\n  title: '',\n  body: '',\n  favoritesCount: 0,\n  createdAt: '',\n  favorited: null,\n  isAuthorized: null,\n  author: null,\n  tagList: [],\n  likeOrDislike: null,\n  slug: '',\n  token: '',\n};\n\nArticle.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  favoritesCount: PropTypes.number,\n  createdAt: PropTypes.string,\n  favorited: PropTypes.bool,\n  isAuthorized: PropTypes.bool,\n  author: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool])),\n  tagList: PropTypes.arrayOf(PropTypes.string),\n  likeOrDislike: PropTypes.func,\n  slug: PropTypes.string,\n  token: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { likeOrDislike } = bindActionCreators(actions, dispatch);\n  return {\n    likeOrDislike,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\nimport Article from './Article';\n\nconst Articles = ({ articles }) => {\n  return (\n    <div className=\"articles\">\n      {articles.length === 0 ? <Spin tip=\"Loading...\" /> : null}\n      {articles.map(el => {\n        return <Article key={el.slug} {...el} />;\n      })}\n    </div>\n  );\n};\n\nArticles.defaultProps = {\n  articles: [],\n};\n\nArticles.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Articles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Pagination } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../actions/actions';\nimport Articles from './Articles';\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n    };\n  }\n\n  componentDidMount() {\n    this.asyncDidMount();\n  }\n\n  asyncDidMount = async () => {\n    const { getArticles, token, login } = this.props;\n    const { currentPage } = this.state;\n    const checkStorage = localStorage.getItem('user')\n      ? JSON.parse(localStorage.getItem('user'))\n      : null;\n    if (checkStorage) {\n      await login({ password: checkStorage.password, email: checkStorage.email });\n    }\n    const checkAuthorization = token || null;\n    getArticles(checkAuthorization, currentPage);\n  };\n\n  pageHandler = page => {\n    const { getArticles, token } = this.props;\n    const checkAuthorization = token || null;\n    getArticles(checkAuthorization, page);\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { id, email, username, exit, articles, articlesCount, token } = this.props;\n    const { currentPage } = this.state;\n\n    return (\n      <>\n        <Pagination\n          defaultCurrent={1}\n          onChange={this.pageHandler}\n          current={currentPage}\n          pageSize={10}\n          total={articlesCount}\n        />\n        <main className=\"container\">\n          {token ? (\n            <aside className=\"user\">\n              <div className=\"user__info\">\n                <div className=\"user__row\">\n                  {username} #{id}\n                </div>\n                <div className=\"user__row\">{email}</div>\n              </div>\n              <div className=\"user__buttons\">\n                <NavLink to=\"/add\">\n                  <Button type=\"primary\">Создать страницу</Button>\n                </NavLink>\n                <Button htmlType=\"button\" onClick={exit} className=\"user__btn\" type=\"danger\">\n                  Выход\n                </Button>\n              </div>\n            </aside>\n          ) : null}\n          <Articles articles={articles} />\n        </main>\n        <Pagination\n          defaultCurrent={1}\n          onChange={this.pageHandler}\n          current={currentPage}\n          pageSize={10}\n          total={articlesCount}\n        />\n      </>\n    );\n  }\n}\n\nMainPage.defaultProps = {\n  id: null,\n  email: '',\n  username: '',\n  exit: null,\n  getArticles: null,\n  articles: [],\n  token: '',\n  articlesCount: null,\n  login: null,\n};\n\nMainPage.propTypes = {\n  id: PropTypes.number,\n  email: PropTypes.string,\n  username: PropTypes.string,\n  exit: PropTypes.func,\n  getArticles: PropTypes.func,\n  token: PropTypes.string,\n  articles: PropTypes.arrayOf(PropTypes.object),\n  articlesCount: PropTypes.number,\n  login: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    id: state.user.id,\n    email: state.user.email,\n    username: state.user.username,\n    token: state.user.token,\n    articles: state.articles.articles,\n    articlesCount: state.articles.articlesCount,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { exit, getArticles, login } = bindActionCreators(actions, dispatch);\n  return {\n    exit,\n    getArticles,\n    login,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","import React from 'react';\nimport { Form, Formik, FieldArray } from 'formik';\nimport { Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst ArticleCreate = ({ isAuthorized, createArticle, token }) => {\n  const history = useHistory();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          title: '',\n          description: '',\n          body: '',\n          tagList: [''],\n        }}\n        onSubmit={values => {\n          if (!isAuthorized) {\n            alert('Необходима авторизация');\n            return;\n          }\n          const newValues = { ...values, tagList: values.tagList.filter(el => el !== '') };\n          createArticle(newValues, token);\n          history.push('/');\n        }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur }) => (\n          <Form className=\"form\">\n            <Field\n              label=\"title\"\n              changer={handleChange}\n              blur={handleBlur}\n              idName=\"title\"\n              value={values.title}\n              touched={touched.title}\n              error={errors.title}\n            />\n            <Field\n              label=\"description\"\n              changer={handleChange}\n              blur={handleBlur}\n              idName=\"description\"\n              value={values.description}\n              touched={touched.description}\n              error={errors.description}\n            />\n            <Field\n              label=\"body\"\n              changer={handleChange}\n              blur={handleBlur}\n              idName=\"body\"\n              value={values.body}\n              touched={touched.body}\n              error={errors.body}\n            />\n            <FieldArray\n              name=\"tagList\"\n              render={arrayHelpers => (\n                <>\n                  <div className=\"form__row-tags\">\n                    {values.tagList.map((tag, index) => {\n                      return (\n                        <div key={tag} className=\"form__row\">\n                          <Input\n                            className=\"form__tag\"\n                            placeholder=\"Введите тэг\"\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            value={values.tagList[index]}\n                            id={`tagList${index}`}\n                            name={`tagList.${index}`}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                  <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                    Добавить тэг\n                  </Button>\n                </>\n              )}\n            />\n            <div className=\"form__row\">\n              <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n                Создать статью\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nArticleCreate.defaultProps = {\n  isAuthorized: null,\n  token: '',\n  createArticle: null,\n};\n\nArticleCreate.propTypes = {\n  isAuthorized: PropTypes.bool,\n  token: PropTypes.string,\n  createArticle: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { createArticle } = bindActionCreators(actions, dispatch);\n  return {\n    createArticle,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleCreate);\n","import React from 'react';\nimport { Button } from 'antd';\nimport { formatDistance } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../actions/actions';\n\nconst SingleArticle = ({ articles, isAuthorized, slug, likeOrDislike, token, currUser }) => {\n  const article = articles.filter(el => el.slug === slug)[0];\n  const {\n    title,\n    body,\n    favoritesCount,\n    author,\n    createdAt,\n    favorited,\n    tagList,\n    author: { username },\n  } = article;\n  const isLike = favorited ? 'dislike' : 'like';\n\n  const likeHandler = () => likeOrDislike(favorited, slug, token);\n  return (\n    <article>\n      {isAuthorized && currUser === username ? (\n        <NavLink to={`/articles/${slug}/edit`}>\n          <Button type=\"normal\">Редактировать</Button>\n        </NavLink>\n      ) : null}\n      <h1 className=\"article__title\">{title}</h1>\n      <div className=\"article__body\">{body}</div>\n      {tagList.length > 0 ? (\n        <div className=\"article__tags\">\n          {tagList.map((tag, i) => {\n            const newIndex = `tag-${i}`;\n            return (\n              <span key={newIndex} className=\"article__tag\">\n                {tag}\n              </span>\n            );\n          })}\n        </div>\n      ) : null}\n      <div className=\"article__meta\">\n        <div className=\"article__likes\">\n          {isAuthorized ? (\n            <Button className=\"article__likeBtn\" onClick={likeHandler} icon={isLike}>\n              {isLike}\n            </Button>\n          ) : (\n            'Likes '\n          )}\n          {favoritesCount}\n        </div>\n        <div className=\"article__created\">\n          <span className=\"article__author\">Автор: {author.username}</span>\n          <span className=\"article__date\">\n            {'Создано:  '}\n            {formatDistance(new Date(createdAt), new Date(), {\n              locale: ru,\n            })}{' '}\n            назад\n          </span>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nSingleArticle.defaultProps = {\n  articles: [],\n  isAuthorized: null,\n  slug: '',\n  likeOrDislike: null,\n  token: '',\n  currUser: '',\n};\n\nSingleArticle.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n  isAuthorized: PropTypes.bool,\n  slug: PropTypes.string,\n  likeOrDislike: PropTypes.func,\n  token: PropTypes.string,\n  currUser: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles.articles,\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n    currUser: state.user.username,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { likeOrDislike } = bindActionCreators(actions, dispatch);\n  return {\n    likeOrDislike,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleArticle);\n","import React from 'react';\nimport { FieldArray, Form, Formik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst ArticleEdit = ({ articles, isAuthorized, slug, token, updateArticle }) => {\n  const article = articles.filter(el => el.slug === slug)[0];\n  const { title, body, description, tagList } = article;\n  return (\n    <Formik\n      initialValues={{\n        title,\n        description,\n        body,\n        tagList,\n      }}\n      onSubmit={values => {\n        if (!isAuthorized) {\n          alert('Необходима авторизация');\n        }\n        updateArticle(values, slug, token);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form className=\"form\">\n          <Field\n            label=\"title\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"title\"\n            value={values.title}\n            touched={touched.title}\n            error={errors.title}\n          />\n          <Field\n            label=\"description\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"description\"\n            value={values.description}\n            touched={touched.description}\n            error={errors.description}\n          />\n          <Field\n            label=\"body\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"body\"\n            value={values.body}\n            touched={touched.body}\n            error={errors.body}\n          />\n          <FieldArray\n            name=\"tagList\"\n            render={arrayHelpers => (\n              <>\n                <div className=\"form__row-tags\">\n                  {values.tagList.map((tag, index) => {\n                    return (\n                      <div key={tag} className=\"form__row\">\n                        <Input\n                          className=\"form__tag\"\n                          placeholder=\"Введите тэг\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.tagList[index]}\n                          id={`tagList${index}`}\n                          name={`tagList.${index}`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n                <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                  Добавить тэг\n                </Button>\n              </>\n            )}\n          />\n          <div className=\"form__row\">\n            <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n              Изменить статью\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nArticleEdit.defaultProps = {\n  articles: [],\n  isAuthorized: null,\n  slug: '',\n  token: '',\n  updateArticle: null,\n};\n\nArticleEdit.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n  isAuthorized: PropTypes.bool,\n  slug: PropTypes.string,\n  token: PropTypes.string,\n  updateArticle: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles.articles,\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { updateArticle } = bindActionCreators(actions, dispatch);\n  return {\n    updateArticle,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleEdit);\n","import React from 'react';\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './styles/styles.scss';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Header from './components/Header';\nimport MainPage from './components/MainPage';\nimport CreateArticle from './components/ArticleCreate';\nimport SingleArticle from './components/SingleArticle';\nimport ArticleEdit from './components/ArticleEdit';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={MainPage} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/add\" component={CreateArticle} />\n          <Route\n            path=\"/articles/:slug\"\n            render={propses => {\n              const { params, path } = propses.match;\n              return (\n                <Switch>\n                  <Route exact path={`${path}/`}>\n                    <SingleArticle {...params} />\n                  </Route>\n                  <Route path={`${path}/edit`}>\n                    <ArticleEdit {...params} />\n                  </Route>\n                </Switch>\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nApp.defaultProps = {\n  isAuthorized: null,\n};\n\nApp.propTypes = {\n  isAuthorized: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({ isAuthorized: state.user.isAuthorized });\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\n  isSuccessful: null,\n  error: null,\n  isAuthorized: null,\n};\n\nconst userForm = (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case 'USER_REGISTERED':\n      return { ...state, isSuccessful: payload.reg, error: null };\n    case 'REG_ERROR':\n      return { ...state, isSuccessful: null, error: payload.error };\n    case 'USER_LOGIN':\n      return { ...state, ...payload.user, isAuthorized: true };\n    case 'LOGIN_ERROR':\n      return { ...state, error: true };\n    case 'LOGIN_EXIT':\n      return { ...initialState };\n    case 'ERROR_CLEAR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nexport default userForm;\n","const initialState = {\n  articles: [],\n  articlesCount: 0,\n};\n\nconst articles = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_ARTICLE':\n      return {\n        articles: [action.payload.article, ...state.articles],\n        articlesCount: state.articlesCount + 1,\n      };\n    case 'GET_ARTICLES':\n      return {\n        articles: [...action.payload.articles.articles],\n        articlesCount: action.payload.articles.articlesCount,\n      };\n    case 'LIKE':\n      return {\n        articles: state.articles.map(el => {\n          if (el.slug === action.payload.article.slug) {\n            return {\n              ...action.payload.article,\n              favoritesCount: action.payload.article.favoritesCount,\n              favorited: action.payload.article.favorited,\n            };\n          }\n          return el;\n        }),\n        articlesCount: state.articlesCount,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default articles;\n","import { combineReducers } from 'redux';\nimport userForm from './userForm';\nimport articles from './articles';\n\nexport default combineReducers({ user: userForm, articles });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from './reducers/reducers';\n\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(thunk))); // eslint-disable-line\r\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}