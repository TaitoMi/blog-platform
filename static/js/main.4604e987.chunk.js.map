{"version":3,"sources":["images/realworld.png","components/Field.jsx","actions/registration.js","actions/login.js","actions/createArticle.js","actions/getArticles.js","actions/like.js","actions/updateArticle.js","actions/actions.js","components/Login.jsx","components/SignUp.jsx","components/Header.jsx","components/Article.jsx","components/Articles.jsx","components/MainPage.jsx","components/CreateArticle.jsx","components/SingleArticle.jsx","components/ArticleEdit.jsx","App.jsx","serviceWorker.js","reducers/userForm.js","reducers/articles.js","reducers/reducers.js","index.jsx"],"names":["module","exports","Field","label","changer","blur","idName","value","touched","error","apiError","className","toUpperCase","slice","placeholder","onChange","onBlur","id","name","defaultProps","registration","email","username","password","dispatch","a","async","fetch","method","headers","body","JSON","stringify","user","response","ok","type","payload","reg","json","then","err","errors","action","login","createArticle","values","token","Authorization","article","el","getArticles","articles","likeOrDislike","isFavorited","slug","updateArticle","clear","exit","validationSchema","Yup","shape","min","max","required","Login","isAuthorized","exact","path","render","to","initialValues","onSubmit","handleChange","handleBlur","Password","htmlType","onClick","connect","state","bindActionCreators","actions","SignUp","isSuccessful","setSubmitting","Header","NavBar","src","Logo","alt","Article","title","favoritesCount","author","createdAt","favorited","tagList","redirect","isLike","onKeyUp","role","length","map","tag","i","newIndex","key","event","stopPropagation","icon","formatDistance","Date","locale","ru","Articles","history","useHistory","props","updatedAt","description","push","MainPage","pageHandler","page","setState","currentPage","this","from","articlesPart","defaultCurrent","current","pageSize","total","React","Component","CreateArticle","newValues","filter","alert","arrayHelpers","index","SingleArticle","ArticleEdit","console","log","App","component","propses","match","params","Boolean","window","location","hostname","initialState","userForm","articlesCount","currArticles","findIndex","combineReducers","store","createStore","allReducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.4604e987.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/realworld.ea1785a0.png\";","import React from 'react';\nimport { Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nconst Field = ({ label, changer, blur, idName, value, touched, error, apiError }) => {\n  return (\n    <>\n      <div className=\"form__row\">\n        <span className=\"form__label\">{label[0].toUpperCase() + label.slice(1)}</span>\n        <Input\n          placeholder={`Введите ${label}`}\n          onChange={changer}\n          onBlur={blur}\n          id={idName}\n          name={idName}\n          value={value}\n          className={`form__input ${touched && error ? 'has-error' : ''}`}\n        />\n      </div>\n      {touched && error ? <div className=\"input__error\">{error}</div> : null}\n      {apiError ? <div className=\"input__error\">{apiError}</div> : null}\n    </>\n  );\n};\n\nField.defaultProps = {\n  label: '',\n  idName: '',\n  value: '',\n  error: null,\n  apiError: null,\n  changer: null,\n  blur: null,\n  touched: null,\n};\n\nField.propTypes = {\n  label: PropTypes.string,\n  idName: PropTypes.string,\n  value: PropTypes.string,\n  error: PropTypes.string,\n  apiError: PropTypes.arrayOf(PropTypes.string),\n  changer: PropTypes.func,\n  blur: PropTypes.func,\n  touched: PropTypes.bool,\n};\n\nexport default Field;\n","const registration = ({ email, username, password }) => {\n  return async dispatch => {\n    const response = await fetch('https://conduit.productionready.io/api/users/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          email,\n          username,\n          password,\n        },\n      }),\n    });\n    if (response.ok) {\n      return dispatch({\n        type: 'USER_REGISTERED',\n        payload: {\n          reg: true,\n        },\n      });\n    }\n    const action = await response.json().then(err => {\n      return {\n        type: 'REG_ERROR',\n        payload: {\n          error: err.errors,\n        },\n      };\n    });\n    return dispatch(action);\n  };\n};\n\nexport default registration;\n","const login = ({ email, password }) => async dispatch => {\n  const response = await fetch('https://conduit.productionready.io/api/users/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      user: {\n        email,\n        password,\n      },\n    }),\n  });\n  if (response.ok) {\n    const action = await response.json().then(user => {\n      return {\n        type: 'USER_LOGIN',\n        payload: {\n          ...user,\n        },\n      };\n    });\n    return dispatch(action);\n  }\n  const action = await response.json().then(() => {\n    return {\n      type: 'LOGIN_ERROR',\n    };\n  });\n  return dispatch(action);\n};\n\nexport default login;\n","const createArticle = (values, token) => async dispatch => {\n  const response = await fetch('https://conduit.productionready.io/api/articles', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n    body: JSON.stringify({\n      article: { ...values },\n    }),\n  });\n  if (response.ok) {\n    const action = await response.json().then(el => {\n      return {\n        type: 'CREATE_ARTICLE',\n        payload: { ...el },\n      };\n    });\n    return dispatch(action);\n  }\n  return 'ku';\n};\n\nexport default createArticle;\n","const getArticles = token => async dispatch => {\n  const response = await fetch('https://conduit.productionready.io/api/articles/?limit=100', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n  });\n  const action = await response.json().then(articles => {\n    return {\n      type: 'GET_ARTICLES',\n      payload: {\n        articles,\n      },\n    };\n  });\n  return dispatch(action);\n};\n\nexport default getArticles;\n","const likeOrDislike = (isFavorited, slug, token) => async dispatch => {\n  // if (!isFavorited) {\n  const response = await fetch(`https://conduit.productionready.io/api/articles/${slug}/favorite`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n  });\n  const action = await response.json().then(el => {\n    return {\n      type: 'LIKE',\n      payload: el,\n    };\n  });\n  return dispatch(action);\n  // }\n  // return dispatch({ type: 'DISLIKE' });\n};\n\nexport default likeOrDislike;\n","/* eslint-disable */\nconst updateArticle = (values, slug, token) => async dispatch => {\n  const response = await fetch(`https://conduit.productionready.io/api/articles/${slug}/`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${token}`,\n    },\n    body: JSON.stringify({\n      article: { ...values },\n    }),\n  });\n};\n\nexport default updateArticle;\n","import registration from './registration';\nimport login from './login';\nimport createArticle from './createArticle';\nimport getArticles from './getArticles';\nimport likeOrDislike from './like';\nimport updateArticle from './updateArticle';\n\nexport { registration, login, createArticle, getArticles, likeOrDislike, updateArticle };\n\nexport const clear = () => ({ type: 'ERROR_CLEAR' });\n\nexport const exit = () => ({ type: 'LOGIN_EXIT' });\n","import React from 'react';\nimport { Button, Input } from 'antd';\nimport { NavLink, Redirect, Route } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport Field from './Field';\nimport * as actions from '../actions/actions';\n\nconst isRequired = 'Обязательное поле';\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, 'Не меньше 8')\n    .max(40, 'Не больше 40'),\n  email: Yup.string()\n    .required(isRequired)\n    .email('Неправильный email адрес'),\n});\n\nconst Login = ({ error, isAuthorized, login, clear }) => {\n  const loginHandler = user => {\n    login(user);\n  };\n  const render = () => (isAuthorized ? <Redirect to=\"/\" /> : null);\n  return (\n    <>\n      <Route exact path=\"/login\" render={render} />\n      <Formik\n        initialValues={{\n          password: '',\n          email: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={values => {\n          loginHandler(values);\n        }}\n      >\n        {({ values, errors, touched, handleChange, handleBlur }) => (\n          <Form className=\"form\">\n            {error ? <div>Неправильный email или пароль</div> : null}\n            <Field\n              label=\"email\"\n              changer={handleChange}\n              blur={handleBlur}\n              idName=\"email\"\n              value={values.email}\n              touched={touched.email}\n              error={errors.email}\n              apiError={error ? error.email : null}\n            />\n            <div className=\"form__row\">\n              <span className=\"form__label\">Введите пароль</span>\n              <Input.Password\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n                id=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <div className=\"form__row\">\n              <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n                Войти\n              </Button>\n              <Button\n                htmlType=\"button\"\n                onClick={() => login({ email: 'gfdaker96@gmail.com', password: '321zxc321' })}\n                className=\"form__submit-btn\"\n                type=\"primary\"\n              >\n                loginForTest\n              </Button>\n              <NavLink to=\"/signup\" onClick={clear}>\n                <Button type=\"danger\">Зарегистрироваться</Button>\n              </NavLink>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nLogin.defaultProps = {\n  login: null,\n  error: null,\n  isAuthorized: null,\n  clear: null,\n};\n\nLogin.propTypes = {\n  login: PropTypes.func,\n  error: PropTypes.bool,\n  isAuthorized: PropTypes.bool,\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    error: state.user.error,\n    isAuthorized: state.user.isAuthorized,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { login, clear } = bindActionCreators(actions, dispatch);\n  return {\n    login,\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { Button, Input } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst isRequired = 'Обязательное поле';\nconst validationSchema = Yup.object().shape({\n  username: Yup.string()\n    .required(isRequired)\n    .min(4, 'Не меньше 4 символов')\n    .max(50, 'Не более 50 символов'),\n  password: Yup.string()\n    .min(8, 'Не меньше 8')\n    .max(40, 'Не больше 40'),\n  email: Yup.string()\n    .required(isRequired)\n    .email('Неправильный email адрес'),\n});\n\nconst SignUp = ({ isSuccessful, error, clear, registration }) => {\n  const registrationHandler = userData => {\n    registration(userData);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: '',\n        password: '',\n        email: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={(values, { setSubmitting }) => {\n        setSubmitting(isSuccessful);\n        registrationHandler(values);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form className=\"form\">\n          <Field\n            label=\"имя\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"username\"\n            value={values.username}\n            touched={touched.username}\n            error={errors.username}\n            apiError={error ? error.username : null}\n          />\n          <Field\n            label=\"email\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"email\"\n            value={values.email}\n            touched={touched.email}\n            error={errors.email}\n            apiError={error ? error.email : null}\n          />\n          <div className=\"form__row\">\n            <span className=\"form__label\">Введите пароль</span>\n            <Input.Password\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              id=\"password\"\n              name=\"password\"\n            />\n          </div>\n          <div className=\"form__row\">\n            <Button className=\"form__submit-btn\" htmlType=\"submit\" type=\"primary\">\n              Зарегистрироваться\n            </Button>\n            <NavLink to=\"/login\" onClick={clear}>\n              <Button type=\"danger\">Уже есть аккаунт?</Button>\n            </NavLink>\n          </div>\n          {isSuccessful ? <div>Вы успешно зарегистрировались</div> : null}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nSignUp.defaultProps = {\n  registration: null,\n  isSuccessful: null,\n  error: null,\n  clear: null,\n};\n\nSignUp.propTypes = {\n  registration: PropTypes.func,\n  isSuccessful: PropTypes.bool,\n  error: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n    PropTypes.object,\n  ]),\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isSuccessful: state.user.isSuccessful,\n    error: state.user.error,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { registration, clear } = bindActionCreators(actions, dispatch);\n  return {\n    registration,\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport Logo from '../images/realworld.png';\nimport * as actions from '../actions/actions';\n\nconst Header = ({ isAuthorized, clear }) => {\n  const NavBar = isAuthorized ? (\n    <div className=\"header__right\">\n      <NavLink to=\"/\">\n        <Button type=\"primary\">Личный кабинет</Button>\n      </NavLink>\n    </div>\n  ) : (\n    <div className=\"header__right\">\n      <NavLink to=\"/login\" onClick={clear}>\n        <Button type=\"primary\">Войти</Button>\n      </NavLink>\n      <NavLink to=\"/signup\" onClick={clear}>\n        <Button type=\"danger\">Зарегистрироваться</Button>\n      </NavLink>\n    </div>\n  );\n  return (\n    <header className=\"header\">\n      <div className=\"header__left\">\n        <NavLink to=\"/\">\n          <img className=\"header__logo\" src={Logo} alt=\"Логотип RealWorld\" />\n        </NavLink>\n      </div>\n      {NavBar}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  isAuthorized: null,\n  clear: null,\n};\n\nHeader.propTypes = {\n  isAuthorized: PropTypes.bool,\n  clear: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { clear } = bindActionCreators(actions, dispatch);\n  return {\n    clear,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport { formatDistance } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions/actions';\n\nconst Article = ({\n  title,\n  body,\n  favoritesCount,\n  author,\n  createdAt,\n  favorited,\n  tagList,\n  isAuthorized,\n  redirect,\n  likeOrDislike,\n  slug,\n  token,\n}) => {\n  const isLike = favorited ? 'dislike' : 'like';\n  const likeHandler = event => {\n    event.stopPropagation();\n    likeOrDislike(favorited, slug, token);\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions\n    <div onClick={redirect} onKeyUp={redirect} role=\"article\" className=\"articles__item article\">\n      <h1 className=\"article__title\">{title}</h1>\n      <div className=\"article__body\">{body}</div>\n      {tagList.length > 0 ? (\n        <div className=\"article__tags\">\n          {tagList.map((tag, i) => {\n            const newIndex = `tag-${i}`;\n            return (\n              <span key={newIndex} className=\"article__tag\">\n                {tag}\n              </span>\n            );\n          })}\n        </div>\n      ) : null}\n      <div className=\"article__meta\">\n        <div className=\"article__likes\">\n          {isAuthorized ? (\n            <Button className=\"article__likeBtn\" onClick={likeHandler} icon={isLike}>\n              {isLike}\n            </Button>\n          ) : null}\n          {favoritesCount}\n        </div>\n        <div className=\"article__created\">\n          <span className=\"article__author\">Автор: {author.username}</span>\n          <span className=\"article__date\">\n            {'Создано:  '}\n            {formatDistance(new Date(createdAt), new Date(), {\n              locale: ru,\n            })}{' '}\n            назад\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nArticle.defaultProps = {\n  title: '',\n  body: '',\n  favoritesCount: 0,\n  createdAt: '',\n  favorited: null,\n  isAuthorized: null,\n  author: null,\n  tagList: [],\n  redirect: null,\n  likeOrDislike: null,\n  slug: '',\n  token: '',\n};\n\nArticle.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  favoritesCount: PropTypes.number,\n  createdAt: PropTypes.string,\n  favorited: PropTypes.bool,\n  isAuthorized: PropTypes.bool,\n  author: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool])),\n  tagList: PropTypes.arrayOf(PropTypes.string),\n  redirect: PropTypes.func,\n  likeOrDislike: PropTypes.func,\n  slug: PropTypes.string,\n  token: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { likeOrDislike } = bindActionCreators(actions, dispatch);\n  return {\n    likeOrDislike,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Article from './Article';\n\nconst Articles = ({ articles }) => {\n  const history = useHistory();\n\n  const goToArticle = slug => () => {\n    history.push(`/articles/${slug}`);\n  };\n\n  return (\n    <div className=\"articles\">\n      {articles.map((el, i) => {\n        const newIndex = `article-${i}`;\n        const props = {\n          title: el.title,\n          slug: el.slug,\n          body: el.body,\n          createdAt: el.createdAt,\n          updatedAt: el.updatedAt,\n          tagList: el.tagList,\n          description: el.description,\n          author: el.author,\n          favorited: el.favorited,\n          favoritesCount: el.favoritesCount,\n        };\n        return <Article redirect={goToArticle(el.slug)} key={newIndex} {...props} />;\n      })}\n    </div>\n  );\n};\n\nArticles.defaultProps = {\n  articles: [],\n};\n\nArticles.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default Articles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Pagination } from 'antd';\nimport { bindActionCreators } from 'redux';\nimport { NavLink } from 'react-router-dom';\n\nimport * as actions from '../actions/actions';\nimport Articles from './Articles';\n\nclass MainPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n    };\n  }\n\n  componentDidMount() {\n    const { getArticles, token } = this.props;\n    getArticles(token);\n  }\n\n  pageHandler = page => {\n    this.setState({ currentPage: page });\n  };\n\n  render() {\n    const { id, email, username, exit, articles } = this.props;\n    const { currentPage } = this.state;\n    const from = currentPage * 10 - 10;\n    const to = currentPage * 10 - 1;\n    const articlesPart = articles.slice(from, to);\n    return (\n      <>\n        <Pagination\n          defaultCurrent={1}\n          onChange={this.pageHandler}\n          current={currentPage}\n          pageSize={10}\n          total={articles.length}\n        />\n        <main className=\"container\">\n          <aside className=\"user\">\n            <div className=\"user__info\">\n              <div className=\"user__row\">id: {id}</div>\n              <div className=\"user__row\">email: {email}</div>\n              <div className=\"user__row\">username: {username}</div>\n            </div>\n            <div className=\"user__buttons\">\n              <NavLink to=\"/add\">\n                <Button type=\"primary\">Создать страницу</Button>\n              </NavLink>\n              <Button htmlType=\"button\" onClick={exit} className=\"user__btn\" type=\"danger\">\n                Выход\n              </Button>\n            </div>\n          </aside>\n          <Articles articles={articlesPart} />\n        </main>\n        <Pagination\n          defaultCurrent={1}\n          onChange={this.pageHandler}\n          current={currentPage}\n          pageSize={10}\n          total={articles.length}\n        />\n      </>\n    );\n  }\n}\n\nMainPage.defaultProps = {\n  id: null,\n  email: '',\n  username: '',\n  exit: null,\n  getArticles: null,\n  articles: [],\n  token: '',\n};\n\nMainPage.propTypes = {\n  id: PropTypes.number,\n  email: PropTypes.string,\n  username: PropTypes.string,\n  exit: PropTypes.func,\n  getArticles: PropTypes.func,\n  articles: PropTypes.arrayOf(PropTypes.object),\n  token: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    id: state.user.id,\n    email: state.user.email,\n    username: state.user.username,\n    token: state.user.token,\n    articles: state.articles.articles,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { exit, getArticles } = bindActionCreators(actions, dispatch);\n  return {\n    exit,\n    getArticles,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\n","import React from 'react';\nimport { Form, Formik, FieldArray } from 'formik';\nimport { Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst CreateArticle = ({ isAuthorized, createArticle, token, login }) => {\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        description: '',\n        body: '',\n        tagList: [''],\n      }}\n      onSubmit={values => {\n        if (!isAuthorized) {\n          alert('Необходима авторизация');\n          return;\n        }\n        const newValues = { ...values, tagList: values.tagList.filter(el => el !== '') };\n        createArticle(newValues, token);\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form className=\"form\">\n          <Field\n            label=\"title\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"title\"\n            value={values.title}\n            touched={touched.title}\n            error={errors.title}\n          />\n          <Field\n            label=\"description\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"description\"\n            value={values.description}\n            touched={touched.description}\n            error={errors.description}\n          />\n          <Field\n            label=\"body\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"body\"\n            value={values.body}\n            touched={touched.body}\n            error={errors.body}\n          />\n          <FieldArray\n            name=\"tagList\"\n            render={arrayHelpers => (\n              <>\n                <div className=\"form__row-tags\">\n                  {values.tagList.map((tag, index) => {\n                    const newIndex = `tag-${index}`;\n                    return (\n                      <div key={newIndex} className=\"form__row\">\n                        <Input\n                          className=\"form__tag\"\n                          placeholder=\"Введите тэг\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.tagList[index]}\n                          id={`tagList${index}`}\n                          name={`tagList.${index}`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n                <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                  Добавить тэг\n                </Button>\n              </>\n            )}\n          />\n          <div className=\"form__row\">\n            <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n              Создать статью\n            </Button>\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => login({ email: 'gfdaker96@gmail.com', password: '321zxc321' })}\n          >\n            login\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nCreateArticle.defaultProps = {\n  isAuthorized: null,\n  token: '',\n  createArticle: null,\n  login: null,\n};\n\nCreateArticle.propTypes = {\n  isAuthorized: PropTypes.bool,\n  token: PropTypes.string,\n  createArticle: PropTypes.func,\n  login: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { createArticle, login } = bindActionCreators(actions, dispatch);\n  return {\n    createArticle,\n    login,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateArticle);\n","import React from 'react';\nimport { Button } from 'antd';\nimport { formatDistance } from 'date-fns';\nimport { ru } from 'date-fns/locale';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { NavLink } from 'react-router-dom';\nimport * as actions from '../actions/actions';\n\nconst SingleArticle = ({ articles, isAuthorized, slug, likeOrDislike, token }) => {\n  const article = articles.filter(el => el.slug === slug)[0];\n  const { title, body, favoritesCount, author, createdAt, favorited, tagList } = article;\n  const isLike = favorited ? 'dislike' : 'like';\n\n  const likeHandler = () => likeOrDislike(favorited, slug, token);\n\n  return (\n    <article>\n      {isAuthorized ? (\n        <NavLink to={`/articles/${slug}/edit`}>\n          <Button type=\"normal\">Редактировать</Button>\n        </NavLink>\n      ) : null}\n      <h1 className=\"article__title\">{title}</h1>\n      <div className=\"article__body\">{body}</div>\n      {tagList.length > 0 ? (\n        <div className=\"article__tags\">\n          {tagList.map((tag, i) => {\n            const newIndex = `tag-${i}`;\n            return (\n              <span key={newIndex} className=\"article__tag\">\n                {tag}\n              </span>\n            );\n          })}\n        </div>\n      ) : null}\n      <div className=\"article__meta\">\n        <div className=\"article__likes\">\n          {isAuthorized ? (\n            <Button className=\"article__likeBtn\" onClick={likeHandler} icon={isLike}>\n              {isLike}\n            </Button>\n          ) : null}\n          {favoritesCount}\n        </div>\n        <div className=\"article__created\">\n          <span className=\"article__author\">Автор: {author.username}</span>\n          <span className=\"article__date\">\n            {'Создано:  '}\n            {formatDistance(new Date(createdAt), new Date(), {\n              locale: ru,\n            })}{' '}\n            назад\n          </span>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nSingleArticle.defaultProps = {\n  articles: [],\n  isAuthorized: null,\n  slug: '',\n  likeOrDislike: null,\n  token: '',\n};\n\nSingleArticle.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n  isAuthorized: PropTypes.bool,\n  slug: PropTypes.string,\n  likeOrDislike: PropTypes.func,\n  token: PropTypes.string,\n};\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles.articles,\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { likeOrDislike } = bindActionCreators(actions, dispatch);\n  return {\n    likeOrDislike,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleArticle);\n","import React from 'react';\nimport { FieldArray, Form, Formik } from 'formik';\nimport { Button, Input } from 'antd';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions/actions';\nimport Field from './Field';\n\nconst ArticleEdit = ({ articles, isAuthorized, slug, token, updateArticle }) => {\n  const article = articles.filter(el => el.slug === slug)[0];\n  const { title, body, description, tagList } = article;\n  return (\n    <Formik\n      initialValues={{\n        title,\n        description,\n        body,\n        tagList,\n      }}\n      onSubmit={values => {\n        if (!isAuthorized) {\n          alert('Необходима авторизация');\n        }\n        console.log(values, token, updateArticle);\n        // const newValues = { ...values, tagList: values.tagList.filter(el => el !== '') };\n      }}\n    >\n      {({ values, errors, touched, handleChange, handleBlur }) => (\n        <Form className=\"form\">\n          <Field\n            label=\"title\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"title\"\n            value={values.title}\n            touched={touched.title}\n            error={errors.title}\n          />\n          <Field\n            label=\"description\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"description\"\n            value={values.description}\n            touched={touched.description}\n            error={errors.description}\n          />\n          <Field\n            label=\"body\"\n            changer={handleChange}\n            blur={handleBlur}\n            idName=\"body\"\n            value={values.body}\n            touched={touched.body}\n            error={errors.body}\n          />\n          <FieldArray\n            name=\"tagList\"\n            render={arrayHelpers => (\n              <>\n                <div className=\"form__row-tags\">\n                  {values.tagList.map((tag, index) => {\n                    const newIndex = `tag-${index}`;\n                    return (\n                      <div key={newIndex} className=\"form__row\">\n                        <Input\n                          className=\"form__tag\"\n                          placeholder=\"Введите тэг\"\n                          onChange={handleChange}\n                          onBlur={handleBlur}\n                          value={values.tagList[index]}\n                          id={`tagList${index}`}\n                          name={`tagList.${index}`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n                <Button type=\"button\" onClick={() => arrayHelpers.push('')}>\n                  Добавить тэг\n                </Button>\n              </>\n            )}\n          />\n          <div className=\"form__row\">\n            <Button htmlType=\"submit\" className=\"form__submit-btn\" type=\"primary\">\n              Изменить статью\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nArticleEdit.defaultProps = {\n  articles: [],\n  isAuthorized: null,\n  slug: '',\n  token: '',\n  updateArticle: null,\n};\n\nArticleEdit.propTypes = {\n  articles: PropTypes.arrayOf(PropTypes.object),\n  isAuthorized: PropTypes.bool,\n  slug: PropTypes.string,\n  token: PropTypes.string,\n  updateArticle: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return {\n    articles: state.articles.articles,\n    isAuthorized: state.user.isAuthorized,\n    token: state.user.token,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  const { updateArticle } = bindActionCreators(actions, dispatch);\n  return {\n    updateArticle,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticleEdit);\n","import React from 'react';\nimport 'normalize.css';\nimport 'antd/dist/antd.css';\nimport './styles/styles.scss';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Header from './components/Header';\nimport MainPage from './components/MainPage';\nimport CreateArticle from './components/CreateArticle';\nimport SingleArticle from './components/SingleArticle';\nimport ArticleEdit from './components/ArticleEdit';\n\nconst App = props => {\n  const { isAuthorized } = props;\n  const render = () => (!isAuthorized ? <Redirect to=\"/login\" /> : <MainPage />);\n  return (\n    <BrowserRouter>\n      <Header />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" render={render} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/add\" component={CreateArticle} />\n          <Route\n            path=\"/articles/:slug\"\n            render={propses => {\n              const { params, path } = propses.match;\n              return (\n                <Switch>\n                  <Route exact path={`${path}/`}>\n                    <SingleArticle {...params} />\n                  </Route>\n                  <Route path={`${path}/edit`}>\n                    <ArticleEdit {...params} />\n                  </Route>\n                </Switch>\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nApp.defaultProps = {\n  isAuthorized: null,\n};\n\nApp.propTypes = {\n  isAuthorized: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({ isAuthorized: state.user.isAuthorized });\n\nexport default connect(mapStateToProps)(App);\n","/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialState = {\n  isSuccessful: null,\n  error: null,\n  isAuthorized: null,\n};\n\nconst userForm = (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case 'USER_REGISTERED':\n      return { ...state, isSuccessful: payload.reg, error: null };\n    case 'REG_ERROR':\n      return { ...state, isSuccessful: null, error: payload.error };\n    case 'USER_LOGIN':\n      return { ...state, ...payload.user, isAuthorized: true };\n    case 'LOGIN_ERROR':\n      return { ...state, error: true };\n    case 'LOGIN_EXIT':\n      return { ...initialState };\n    case 'ERROR_CLEAR':\n      return { ...state, error: null };\n    default:\n      return state;\n  }\n};\n\nexport default userForm;\n","const initialState = {\n  articles: [],\n  articlesCount: 0,\n};\n\nlet currArticles = [];\nlet index;\n\nconst articles = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CREATE_ARTICLE':\n      return {\n        articles: [action.payload.article, ...state.articles],\n        articlesCount: state.articlesCount + 1,\n      };\n    case 'GET_ARTICLES':\n      return {\n        articles: [...action.payload.articles.articles],\n        articlesCount: action.payload.articles.articlesCount,\n      };\n    case 'LIKE':\n      currArticles = [...state.articles];\n      index = currArticles.findIndex(el => el.slug === action.payload.article.slug);\n      currArticles[index] = {\n        ...action.payload.article,\n        favoritesCount: action.payload.article.favoritesCount,\n        favorited: action.payload.article.favorited,\n      };\n      return {\n        articles: [...currArticles],\n        articlesCount: state.articlesCount,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default articles;\n","import { combineReducers } from 'redux';\nimport userForm from './userForm';\nimport articles from './articles';\n\nexport default combineReducers({ user: userForm, articles });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport allReducers from './reducers/reducers';\n\nconst store = createStore(allReducers, composeWithDevTools(applyMiddleware(thunk))); // eslint-disable-line\r\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}